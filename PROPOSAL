

PROPOSAL AND GUIDELINES FOR QLISP:

The basics of Qlisp are done, the language is made. However the language does not support variables. This can be very easily hacked together, but I would like to remake it while it is still small, so it can be done it a better, more planned out manner.



This will not start out written out planned out, I will write things as I remember them.

TYPES OF DATA:

There will be no int, double, etc.

Everything has a type. 

The only types:

1. NUMBERS

def. Anything that starts with [0-9] or a ., and if a dot is there it must have numbers after it. A number may end in _ to detonate 

ex. 3 1234 3.14 5203002 4442 22 41412.41241243242142134321432

invalid. 324214. .33333333x  two (423)

2. VARIABLES

def. Anything that is a combination of letters and numbers, that must not have only numbers, and must not end in a period. They can not start with '. They cannot have " in them.

ex. a i a2 232fewf !@$@^)&@ this.a

invalid. notavar. 25234  (varnamerewreqwreqw242423421) 'lol


3. EXPRESSIONS


def. Anything that starts with ( and ends with ). Thats it. The expression itself does not have to be valid for it to be of the type expression.

ex. (+ 2 2) () (532) (print) (") (((())))

invalid (). +(35    (()   435345 554 (((())ee

4. NAMESPACES

def. The same rules as a variable, but it must end in a period. This is the only type that can.

ex. this. io. %@TG#@. (). 1111.

5. Strings

def. Anything thats starts with a " and ends with a ".

6. DATA

def. The technical definition is anything that does not fit in the above. By logic this means anything that starts with '. data can end in a ' aswell in order to include spaces easily, but it is not required.

_________________________________________________________________________________________________________

More info on each type.

Giving on each info.

1. Returns: (aka what it evaluates to)
2. Naming guidelines.



NUMBERS:

Returns: Itself,